DEBUG AND ERROR INFORMATION:
    Make sure this isn't exposed on production. Right now it is.

ORDER REMINDERS:
    If initial reminder has run, order by recurrence?
    Allow searching, sorting and filtering on frontend.

CATEGORIES:
    Categorise reminders into 'Expired', 'Today', 'Tomorrow', 'Later in week'.

NOTIFICATIONS:
    Record notifications in a new table. Things like reminder added, updated, archived and also for when reminders are due. Notification types could be 'reminder', 'created', 'updated', 'deleted'.

FAVORITES/PINNING:
    Allow favoriting/pinning reminders. Click on the heart icon in sidebar to view these.

CHOOSE REMINDER CHANNELS:
    Allow users to configure the channels to use for each reminder. This should only show the channels that the user has configured.
    Email is always available by default. Allow Users to add Telegram, SMS and possibly WhatsApp in the future. Perhaps even Messenger/Twitter DM?

SCHEDULER SERVICE:
    This urgently needs tests in place. I refactored the Reminder model into a DDD style folder structure which broke the scheduler, but I never noticed until I pulled onto live server and tested using a live example.

LOOK INTO QUEUEING TASKS:
    I think this is needed urgently so that the process doesn't need to wait on lengthy processes like sending email.
    Beanstalkd seems to be good: 
    Main site: https://beanstalkd.github.io/
    Client list: https://github.com/beanstalkd/beanstalkd/wiki/Client-Libraries
    Simple client: https://github.com/mariuswilms/beanstalk/blob/master/src/Client.php

DELETE & RESTORE:
    Allow users to view a list of archived reminders and restore or completely delete them (ireversible).

REMINDER DATES IN THE PAST:
    If initial reminder date/time is in the past then set initial_reminder_run to true so that recurrence takes over.
    I actually don't like this. I want to change cron to run every 5 minutes and process everything in the past.

DATESSUPPORT:
    Domain\Dates\DatesSupport just doesn't seem right. All those static functions can't be good. Perhaps break out into DaysSupport, DatesSupport, MonthsSupport, YearsSupport and TimesSupport and remove the static-ness of the functions.

ADD LINK TO REMINDER:
    When sending out reminder, perhaps add a link to open up the reminder in the app too? This will rely on saving destination to the session as will most likely be redirected to Login page so will want to redirect to the Reminder on successful login.

REDIRECT TO INTENDED PAGE:
    If user tries to view a specific page, but is redirected (e.g. to login) then I would like to be able to redirect them back to their intended page after performing the required action (e.g. log in).

REMEMBER ME:
    Keep a user logged in. See how Laravel does this.

LOGGING SERVICE:
    Bring in a logging service to log when reminders are sent and updated etc. in SendReminders.

ALLOW A REMINDER TO BE SENT TO A CUSTOM EMAIL ADDRESS:
    E.g. Setup a reminder to remind colleague to do things. Potentially very dangerous! Probably not going to implement this.
